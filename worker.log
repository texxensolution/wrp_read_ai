2024-07-04 16:48:12,146 - INFO - loading environment variables...
2024-07-04 16:48:12,147 - INFO - initializing lark envs...
2024-07-04 16:48:12,148 - INFO - loading ai models...
2024-07-04 16:48:23,197 - INFO - HTTP Request: POST https://open.feishu.cn/open-apis/drive/v1/medias/upload_all "HTTP/1.1 200 OK"
2024-07-04 16:48:26,236 - INFO - HTTP Request: POST https://api.deepgram.com/v1/listen?model=nova-2&punctuate=false&smart_format=false "HTTP/1.1 200 OK"
2024-07-04 16:48:33,084 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-04 16:48:37,839 - INFO - HTTP Request: POST https://open.feishu.cn/open-apis/bitable/v1/apps/LYLzbg2z0aNuUzsLaX8uLZE3spj/tables/tblPDHZfXgZ4Qsjk/records "HTTP/1.1 200 OK"
2024-07-04 16:48:41,128 - INFO - HTTP Request: PUT https://open.feishu.cn/open-apis/bitable/v1/apps/LYLzbg2z0aNuUzsLaX8uLZE3spj/tables/tblZUmwqwdCPptSM/records/recuhxVbrNE8ap "HTTP/1.1 200 OK"
2024-07-04 16:48:45,170 - INFO - HTTP Request: POST https://open.feishu.cn/open-apis/drive/v1/medias/upload_all "HTTP/1.1 200 OK"
2024-07-04 16:48:48,469 - INFO - HTTP Request: POST https://api.deepgram.com/v1/listen?model=nova-2&punctuate=false&smart_format=false "HTTP/1.1 200 OK"
2024-07-04 16:48:54,084 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-04 16:48:58,506 - INFO - HTTP Request: POST https://open.feishu.cn/open-apis/bitable/v1/apps/LYLzbg2z0aNuUzsLaX8uLZE3spj/tables/tblPDHZfXgZ4Qsjk/records "HTTP/1.1 200 OK"
2024-07-04 16:49:02,358 - INFO - HTTP Request: PUT https://open.feishu.cn/open-apis/bitable/v1/apps/LYLzbg2z0aNuUzsLaX8uLZE3spj/tables/tblZUmwqwdCPptSM/records/recuhxVgs8AH2P "HTTP/1.1 200 OK"
2024-07-04 16:49:05,389 - INFO - HTTP Request: POST https://open.feishu.cn/open-apis/drive/v1/medias/upload_all "HTTP/1.1 200 OK"
2024-07-04 16:49:07,320 - INFO - HTTP Request: POST https://api.deepgram.com/v1/listen?model=nova-2&punctuate=false&smart_format=false "HTTP/1.1 200 OK"
2024-07-04 16:49:10,677 - INFO - HTTP Request: PUT https://open.feishu.cn/open-apis/bitable/v1/apps/LYLzbg2z0aNuUzsLaX8uLZE3spj/tables/tblZUmwqwdCPptSM/records/recuhxVEfkSajr "HTTP/1.1 200 OK"
2024-07-04 16:49:10,679 - ERROR - applicant name: Ulysses Zenne Varde Arzala, message: audio is less than 30 secs
2024-07-04 16:49:13,575 - INFO - HTTP Request: POST https://open.feishu.cn/open-apis/drive/v1/medias/upload_all "HTTP/1.1 200 OK"
2024-07-04 16:49:16,303 - INFO - HTTP Request: POST https://api.deepgram.com/v1/listen?model=nova-2&punctuate=false&smart_format=false "HTTP/1.1 200 OK"
2024-07-04 16:49:20,132 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-04 16:49:24,780 - INFO - HTTP Request: POST https://open.feishu.cn/open-apis/bitable/v1/apps/LYLzbg2z0aNuUzsLaX8uLZE3spj/tables/tblPDHZfXgZ4Qsjk/records "HTTP/1.1 200 OK"
2024-07-04 16:49:28,197 - INFO - HTTP Request: PUT https://open.feishu.cn/open-apis/bitable/v1/apps/LYLzbg2z0aNuUzsLaX8uLZE3spj/tables/tblZUmwqwdCPptSM/records/recuhxVVmop5fH "HTTP/1.1 200 OK"
2024-07-04 16:49:31,506 - INFO - HTTP Request: POST https://open.feishu.cn/open-apis/drive/v1/medias/upload_all "HTTP/1.1 200 OK"
2024-07-04 16:49:34,491 - INFO - HTTP Request: POST https://api.deepgram.com/v1/listen?model=nova-2&punctuate=false&smart_format=false "HTTP/1.1 200 OK"
2024-07-04 16:49:40,101 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-04 16:49:44,674 - INFO - HTTP Request: POST https://open.feishu.cn/open-apis/bitable/v1/apps/LYLzbg2z0aNuUzsLaX8uLZE3spj/tables/tblPDHZfXgZ4Qsjk/records "HTTP/1.1 200 OK"
2024-07-04 16:49:48,299 - INFO - HTTP Request: PUT https://open.feishu.cn/open-apis/bitable/v1/apps/LYLzbg2z0aNuUzsLaX8uLZE3spj/tables/tblZUmwqwdCPptSM/records/recuhxVYMBVMcO "HTTP/1.1 200 OK"
2024-07-04 16:49:51,400 - INFO - HTTP Request: POST https://open.feishu.cn/open-apis/drive/v1/medias/upload_all "HTTP/1.1 200 OK"
2024-07-04 16:49:54,377 - INFO - HTTP Request: POST https://api.deepgram.com/v1/listen?model=nova-2&punctuate=false&smart_format=false "HTTP/1.1 200 OK"
2024-07-04 16:49:58,561 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-04 16:50:03,133 - INFO - HTTP Request: POST https://open.feishu.cn/open-apis/bitable/v1/apps/LYLzbg2z0aNuUzsLaX8uLZE3spj/tables/tblPDHZfXgZ4Qsjk/records "HTTP/1.1 200 OK"
2024-07-04 16:50:07,232 - INFO - HTTP Request: PUT https://open.feishu.cn/open-apis/bitable/v1/apps/LYLzbg2z0aNuUzsLaX8uLZE3spj/tables/tblZUmwqwdCPptSM/records/recuhxW0wKjjkX "HTTP/1.1 200 OK"
2024-07-04 16:50:11,192 - INFO - HTTP Request: POST https://open.feishu.cn/open-apis/bitable/v1/apps/LYLzbg2z0aNuUzsLaX8uLZE3spj/tables/tbl9mbg1ONeuRyjR/records "HTTP/1.1 200 OK"
2024-07-04 16:50:14,554 - INFO - HTTP Request: PUT https://open.feishu.cn/open-apis/bitable/v1/apps/LYLzbg2z0aNuUzsLaX8uLZE3spj/tables/tblZUmwqwdCPptSM/records/recuhxW6Rnnrek "HTTP/1.1 200 OK"
2024-07-04 16:50:28,311 - INFO - HTTP Request: POST https://open.feishu.cn/open-apis/drive/v1/medias/upload_all "HTTP/1.1 200 OK"
2024-07-04 16:50:30,990 - INFO - HTTP Request: POST https://api.deepgram.com/v1/listen?model=nova-2&punctuate=false&smart_format=false "HTTP/1.1 200 OK"
2024-07-04 16:50:34,843 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-04 16:50:39,175 - INFO - HTTP Request: POST https://open.feishu.cn/open-apis/bitable/v1/apps/LYLzbg2z0aNuUzsLaX8uLZE3spj/tables/tblPDHZfXgZ4Qsjk/records "HTTP/1.1 200 OK"
2024-07-04 16:50:42,464 - INFO - HTTP Request: PUT https://open.feishu.cn/open-apis/bitable/v1/apps/LYLzbg2z0aNuUzsLaX8uLZE3spj/tables/tblZUmwqwdCPptSM/records/recuhxWIW7Mrpx "HTTP/1.1 200 OK"
2024-07-04 16:57:27,886 - INFO - loading environment variables...
2024-07-04 16:57:27,886 - DEBUG - Using proactor: IocpProactor
2024-07-04 16:57:27,887 - INFO - initializing lark envs...
2024-07-04 16:57:27,888 - INFO - loading ai models...
2024-07-04 16:57:27,889 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-07-04 16:57:27,890 - DEBUG - load_verify_locations cafile='C:\\Users\\SPM\\Desktop\\ONLY SAVE FILES HERE\\speechwise-api\\.venv\\lib\\site-packages\\certifi\\cacert.pem'
2024-07-04 16:57:27,901 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-07-04 16:57:27,901 - DEBUG - load_verify_locations cafile='C:\\Users\\SPM\\Desktop\\ONLY SAVE FILES HERE\\speechwise-api\\.venv\\lib\\site-packages\\certifi\\cacert.pem'
2024-07-04 16:57:27,914 - DEBUG - Starting new HTTPS connection (1): huggingface.co:443
2024-07-04 16:57:28,233 - DEBUG - https://huggingface.co:443 "HEAD /jeromesky/pronunciation_accuracy/resolve/main/config.json HTTP/1.1" 200 0
2024-07-04 16:57:28,590 - DEBUG - https://huggingface.co:443 "HEAD /jeromesky/pronunciation_accuracy/resolve/main/preprocessor_config.json HTTP/1.1" 200 0
2024-07-04 16:57:28,862 - DEBUG - https://huggingface.co:443 "HEAD /jeromesky/consistency_accuracy_v2/resolve/main/config.json HTTP/1.1" 200 0
2024-07-04 16:57:29,183 - DEBUG - https://huggingface.co:443 "HEAD /jeromesky/consistency_accuracy_v2/resolve/main/preprocessor_config.json HTTP/1.1" 200 0
2024-07-04 16:57:29,202 - DEBUG - Starting new HTTPS connection (1): open.feishu.cn:443
2024-07-04 16:57:30,120 - DEBUG - https://open.feishu.cn:443 "POST /open-apis/auth/v3/tenant_access_token/internal HTTP/1.1" 200 102
2024-07-04 16:57:30,122 - DEBUG - Starting new HTTPS connection (1): open.feishu.cn:443
2024-07-04 16:57:33,967 - DEBUG - https://open.feishu.cn:443 "GET /open-apis/bitable/v1/apps/LYLzbg2z0aNuUzsLaX8uLZE3spj/tables/tblZUmwqwdCPptSM/records?filter=AND%28OR%28CurrentValue.%5Bstatus%5D+%3D+%22%22%2C+CurrentValue.%5Bstatus%5D+%3D+%22failed%22%29%2C+CurrentValue.%5Bno_of_retries%5D+%3C%3D+3%29&page_size=500 HTTP/1.1" 200 5721
2024-07-04 16:57:34,000 - DEBUG - Starting new HTTPS connection (1): aa946349afe37ac713ba0d29ea52cce6.cdn.bubble.io:443
2024-07-04 16:57:34,339 - DEBUG - https://aa946349afe37ac713ba0d29ea52cce6.cdn.bubble.io:443 "GET /f1720083028690x736421219645954000/audioShiela%20Mae%20N%2FA%20Carlos.mp3 HTTP/1.1" 200 1057728
2024-07-04 16:57:34,578 - DEBUG - subprocess.call(['ffmpeg', '-y', '-f', 'mp3', '-i', 'storage\\script_reading\\1720082467952x337217173614231550-shielamaecarlos04@gmail.cok.mp3', '-acodec', 'pcm_s16le', '-vn', '-f', 'wav', '-'])
2024-07-04 16:57:34,752 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-07-04 16:57:34,753 - DEBUG - load_verify_locations cafile='C:\\Users\\SPM\\Desktop\\ONLY SAVE FILES HERE\\speechwise-api\\.venv\\lib\\site-packages\\certifi\\cacert.pem'
2024-07-04 16:57:34,831 - DEBUG - connect_tcp.started host='open.feishu.cn' port=443 local_address=None timeout=None socket_options=None
2024-07-04 16:57:34,848 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x000002713B68BAF0>
2024-07-04 16:57:34,849 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x000002713B862EC0> server_hostname='open.feishu.cn' timeout=None
2024-07-04 16:57:34,867 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x000002713BA002B0>
2024-07-04 16:57:34,868 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-07-04 16:57:34,868 - DEBUG - send_request_headers.complete
2024-07-04 16:57:34,869 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-07-04 16:57:34,952 - DEBUG - send_request_body.complete
2024-07-04 16:57:34,952 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-07-04 16:57:37,705 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Server', b'volc-dcdn'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'78'), (b'X-Envoy-Response-Flags', b'-'), (b'X-Request-Id', b'ed35d31c14c330e71fb1f4195fed694f'), (b'X-Tt-Mp', b'26'), (b'Rip', b'[fdbd:dc01:2b:d1e::15]:9462'), (b'To-Cluster', b'default'), (b'To-Idc', b'lf'), (b'X-Lgw-Dst-Svc', b'aZp80GvUF1yJbrCE7AuPsr0Uxz7q6hw1GKDtdgzRtkav5zTdExTZ4CHnLZD1kd44fV09b__fxvWpPZxZ2WzDfnqYc1WV_brl1Xh0lUBD_Q5QhmZQ7sqNPWI6uVk_6iqck2BuRvmmp3MSNxBpbbvY8UembbVI_J_-9v-dk0fHdwYD_tt1xzaLvWpJAx2kwYk-FP97m90psddWBwUrrqMsnrP_VVazJVhqRXOsz9jX1FbqFHDfEAxfgfknQlzE-ucatKv3ZiKV8rWZLm14wZjhTR86xFb3jxoZQXQRchKen_DZkqUZ6IcAOg=='), (b'Tt_stable', b'1'), (b'Request-Id', b'ed35d31c14c330e71fb1f4195fed694f'), (b'x-tt-logid', b'202407041657343FDF0807B1BC89A1D30F'), (b'x-tt-trace-host', b'01cfb8678dcc79795f2e04ef5cb256a905332a52d49448dfc0c3870a15a0390ae1b9e2d0c4af58c89b9207d0c9b986c22e7358efe116bc4d86472effdfa70ced07ec8facfb9289cc56b2c860d061d51e554515cdacf25d9929827b3184b9a3c708e8563d3bb0c94f19ffa0f3061d82e964'), (b'x-tt-trace-id', b'00-7cf69d4003010a98427387cf06450000-7cf69d4003010a98-01'), (b'X-Timestamp', b'1720083457.632'), (b'x-request-ip', b'184.50.95.196'), (b'x-dsa-trace-id', b'1720083454ed35d31c14c330e71fb1f4195fed694f'), (b'X-Dsa-Origin-Status', b'200'), (b'X-Origin-Response-Time', b'2778,184.50.95.196'), (b'X-Akamai-Request-ID', b'1a019e42.29cd37f8'), (b'Expires', b'Thu, 04 Jul 2024 08:57:37 GMT'), (b'Cache-Control', b'max-age=0, no-cache, no-store'), (b'Pragma', b'no-cache'), (b'Date', b'Thu, 04 Jul 2024 08:57:37 GMT'), (b'X-Cache', b'TCP_MISS from a1-37-42-100.deploy.akamaitechnologies.com (AkamaiGHost/11.5.3-56943929) (-)'), (b'Connection', b'keep-alive'), (b'X-Cache-Remote', b'TCP_MISS from a184-50-95-196.deploy.akamaitechnologies.com (AkamaiGHost/11.5.3-56943929) (-)'), (b'x-tt-trace-tag', b'id=16;cdn-cache=miss;type=dyn'), (b'Server-Timing', b'cdn-cache; desc=MISS, edge; dur=43, origin; dur=2777'), (b'Server-Timing', b'inner; dur=2698, cdn-cache;desc=MISS, origin;dur=2776, edge;dur=0'), (b'X-Parent-Response-Time', b'2819,1.37.42.100')])
2024-07-04 16:57:37,711 - INFO - HTTP Request: POST https://open.feishu.cn/open-apis/drive/v1/medias/upload_all "HTTP/1.1 200 OK"
2024-07-04 16:57:37,711 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-07-04 16:57:37,712 - DEBUG - receive_response_body.complete
2024-07-04 16:57:37,712 - DEBUG - response_closed.started
2024-07-04 16:57:37,712 - DEBUG - response_closed.complete
2024-07-04 16:57:37,713 - DEBUG - close.started
2024-07-04 16:57:37,713 - DEBUG - close.complete
2024-07-04 16:57:37,735 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-07-04 16:57:37,736 - DEBUG - load_verify_locations cafile='C:\\Users\\SPM\\Desktop\\ONLY SAVE FILES HERE\\speechwise-api\\.venv\\lib\\site-packages\\certifi\\cacert.pem'
2024-07-04 16:57:37,751 - DEBUG - connect_tcp.started host='api.deepgram.com' port=443 local_address=None timeout=10.0 socket_options=None
2024-07-04 16:57:38,033 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x000002713BA009A0>
2024-07-04 16:57:38,034 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x000002713B88D3C0> server_hostname='api.deepgram.com' timeout=10.0
2024-07-04 16:57:38,245 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x000002713BA00100>
2024-07-04 16:57:38,246 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-07-04 16:57:38,246 - DEBUG - send_request_headers.complete
2024-07-04 16:57:38,247 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-07-04 16:57:38,276 - DEBUG - send_request_body.complete
2024-07-04 16:57:38,276 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-07-04 16:57:41,376 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'content-type', b'application/json'), (b'access-control-expose-headers', b'dg-model-name,dg-model-uuid,dg-char-count,dg-request-id,dg-error'), (b'access-control-allow-credentials', b'true'), (b'vary', b'origin'), (b'vary', b'access-control-request-method'), (b'vary', b'access-control-request-headers'), (b'content-encoding', b'gzip'), (b'dg-request-id', b'606c1c71-ee8f-48d7-9a8a-7beb76ecf613'), (b'transfer-encoding', b'chunked'), (b'date', b'Thu, 04 Jul 2024 08:57:41 GMT')])
2024-07-04 16:57:41,377 - INFO - HTTP Request: POST https://api.deepgram.com/v1/listen?model=nova-2&punctuate=false&smart_format=false "HTTP/1.1 200 OK"
2024-07-04 16:57:41,377 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-07-04 16:57:41,378 - DEBUG - receive_response_body.complete
2024-07-04 16:57:41,379 - DEBUG - response_closed.started
2024-07-04 16:57:41,379 - DEBUG - response_closed.complete
2024-07-04 16:57:41,380 - DEBUG - close.started
2024-07-04 16:57:41,380 - DEBUG - close.complete
2024-07-04 16:57:42,992 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1141)
           2	LOAD_FAST(arg=0, lineno=1144)
           4	LOAD_CONST(arg=1, lineno=1144)
           6	BINARY_SUBSCR(arg=None, lineno=1144)
           8	STORE_FAST(arg=3, lineno=1144)
          10	LOAD_FAST(arg=1, lineno=1145)
          12	UNARY_NEGATIVE(arg=None, lineno=1145)
          14	LOAD_FAST(arg=3, lineno=1145)
          16	DUP_TOP(arg=None, lineno=1145)
          18	ROT_THREE(arg=None, lineno=1145)
          20	COMPARE_OP(arg=1, lineno=1145)
          22	POP_JUMP_IF_FALSE(arg=17, lineno=1145)
          24	LOAD_FAST(arg=1, lineno=1145)
          26	COMPARE_OP(arg=1, lineno=1145)
          28	POP_JUMP_IF_FALSE(arg=21, lineno=1145)
          30	JUMP_FORWARD(arg=2, lineno=1145)
>         32	POP_TOP(arg=None, lineno=1145)
          34	JUMP_FORWARD(arg=2, lineno=1145)
>         36	LOAD_CONST(arg=1, lineno=1146)
          38	STORE_FAST(arg=3, lineno=1146)
>         40	LOAD_FAST(arg=0, lineno=1148)
          42	LOAD_CONST(arg=2, lineno=1148)
          44	BINARY_SUBSCR(arg=None, lineno=1148)
          46	STORE_FAST(arg=4, lineno=1148)
          48	LOAD_FAST(arg=1, lineno=1149)
          50	UNARY_NEGATIVE(arg=None, lineno=1149)
          52	LOAD_FAST(arg=4, lineno=1149)
          54	DUP_TOP(arg=None, lineno=1149)
          56	ROT_THREE(arg=None, lineno=1149)
          58	COMPARE_OP(arg=1, lineno=1149)
          60	POP_JUMP_IF_FALSE(arg=36, lineno=1149)
          62	LOAD_FAST(arg=1, lineno=1149)
          64	COMPARE_OP(arg=1, lineno=1149)
          66	POP_JUMP_IF_FALSE(arg=40, lineno=1149)
          68	JUMP_FORWARD(arg=2, lineno=1149)
>         70	POP_TOP(arg=None, lineno=1149)
          72	JUMP_FORWARD(arg=2, lineno=1149)
>         74	LOAD_CONST(arg=1, lineno=1150)
          76	STORE_FAST(arg=4, lineno=1150)
>         78	LOAD_FAST(arg=2, lineno=1152)
          80	POP_JUMP_IF_FALSE(arg=52, lineno=1152)
          82	LOAD_GLOBAL(arg=0, lineno=1153)
          84	LOAD_METHOD(arg=1, lineno=1153)
          86	LOAD_FAST(arg=3, lineno=1153)
          88	CALL_METHOD(arg=1, lineno=1153)
          90	LOAD_GLOBAL(arg=0, lineno=1153)
          92	LOAD_METHOD(arg=1, lineno=1153)
          94	LOAD_FAST(arg=4, lineno=1153)
          96	CALL_METHOD(arg=1, lineno=1153)
          98	COMPARE_OP(arg=3, lineno=1153)
         100	RETURN_VALUE(arg=None, lineno=1153)
>        102	LOAD_GLOBAL(arg=0, lineno=1155)
         104	LOAD_METHOD(arg=2, lineno=1155)
         106	LOAD_FAST(arg=3, lineno=1155)
         108	CALL_METHOD(arg=1, lineno=1155)
         110	LOAD_GLOBAL(arg=0, lineno=1155)
         112	LOAD_METHOD(arg=2, lineno=1155)
         114	LOAD_FAST(arg=4, lineno=1155)
         116	CALL_METHOD(arg=1, lineno=1155)
         118	COMPARE_OP(arg=3, lineno=1155)
         120	RETURN_VALUE(arg=None, lineno=1155)
2024-07-04 16:57:42,998 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-04 16:57:42,998 - DEBUG - stack: []
2024-07-04 16:57:42,998 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-04 16:57:42,999 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1141)
2024-07-04 16:57:42,999 - DEBUG - stack []
2024-07-04 16:57:42,999 - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=1144)
2024-07-04 16:57:42,999 - DEBUG - stack []
2024-07-04 16:57:42,999 - DEBUG - dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=1144)
2024-07-04 16:57:43,000 - DEBUG - stack ['$x2.0']
2024-07-04 16:57:43,000 - DEBUG - dispatch pc=6, inst=BINARY_SUBSCR(arg=None, lineno=1144)
2024-07-04 16:57:43,000 - DEBUG - stack ['$x2.0', '$const4.1']
2024-07-04 16:57:43,000 - DEBUG - dispatch pc=8, inst=STORE_FAST(arg=3, lineno=1144)
2024-07-04 16:57:43,000 - DEBUG - stack ['$6binary_subscr.2']
2024-07-04 16:57:43,001 - DEBUG - dispatch pc=10, inst=LOAD_FAST(arg=1, lineno=1145)
2024-07-04 16:57:43,001 - DEBUG - stack []
2024-07-04 16:57:43,001 - DEBUG - dispatch pc=12, inst=UNARY_NEGATIVE(arg=None, lineno=1145)
2024-07-04 16:57:43,001 - DEBUG - stack ['$threshold10.3']
2024-07-04 16:57:43,001 - DEBUG - dispatch pc=14, inst=LOAD_FAST(arg=3, lineno=1145)
2024-07-04 16:57:43,001 - DEBUG - stack ['$12unary_negative.4']
2024-07-04 16:57:43,002 - DEBUG - dispatch pc=16, inst=DUP_TOP(arg=None, lineno=1145)
2024-07-04 16:57:43,002 - DEBUG - stack ['$12unary_negative.4', '$x014.5']
2024-07-04 16:57:43,002 - DEBUG - dispatch pc=18, inst=ROT_THREE(arg=None, lineno=1145)
2024-07-04 16:57:43,002 - DEBUG - stack ['$12unary_negative.4', '$x014.5', '$16dup_top.6']
2024-07-04 16:57:43,002 - DEBUG - dispatch pc=20, inst=COMPARE_OP(arg=1, lineno=1145)
2024-07-04 16:57:43,003 - DEBUG - stack ['$16dup_top.6', '$12unary_negative.4', '$x014.5']
2024-07-04 16:57:43,003 - DEBUG - dispatch pc=22, inst=POP_JUMP_IF_FALSE(arg=17, lineno=1145)
2024-07-04 16:57:43,003 - DEBUG - stack ['$16dup_top.6', '$20compare_op.7']
2024-07-04 16:57:43,003 - DEBUG - end state. edges=[Edge(pc=24, stack=('$16dup_top.6',), blockstack=(), npush=0), Edge(pc=32, stack=('$16dup_top.6',), blockstack=(), npush=0)]
2024-07-04 16:57:43,004 - DEBUG - pending: deque([State(pc_initial=24 nstack_initial=1), State(pc_initial=32 nstack_initial=1)])
2024-07-04 16:57:43,004 - DEBUG - stack: ['$phi24.0']
2024-07-04 16:57:43,004 - DEBUG - state.pc_initial: State(pc_initial=24 nstack_initial=1)
2024-07-04 16:57:43,004 - DEBUG - dispatch pc=24, inst=LOAD_FAST(arg=1, lineno=1145)
2024-07-04 16:57:43,004 - DEBUG - stack ['$phi24.0']
2024-07-04 16:57:43,005 - DEBUG - dispatch pc=26, inst=COMPARE_OP(arg=1, lineno=1145)
2024-07-04 16:57:43,005 - DEBUG - stack ['$phi24.0', '$threshold24.1']
2024-07-04 16:57:43,005 - DEBUG - dispatch pc=28, inst=POP_JUMP_IF_FALSE(arg=21, lineno=1145)
2024-07-04 16:57:43,005 - DEBUG - stack ['$26compare_op.2']
2024-07-04 16:57:43,006 - DEBUG - end state. edges=[Edge(pc=30, stack=(), blockstack=(), npush=0), Edge(pc=40, stack=(), blockstack=(), npush=0)]
2024-07-04 16:57:43,006 - DEBUG - pending: deque([State(pc_initial=32 nstack_initial=1), State(pc_initial=30 nstack_initial=0), State(pc_initial=40 nstack_initial=0)])
2024-07-04 16:57:43,006 - DEBUG - stack: ['$phi32.0']
2024-07-04 16:57:43,006 - DEBUG - state.pc_initial: State(pc_initial=32 nstack_initial=1)
2024-07-04 16:57:43,006 - DEBUG - dispatch pc=32, inst=POP_TOP(arg=None, lineno=1145)
2024-07-04 16:57:43,007 - DEBUG - stack ['$phi32.0']
2024-07-04 16:57:43,007 - DEBUG - dispatch pc=34, inst=JUMP_FORWARD(arg=2, lineno=1145)
2024-07-04 16:57:43,007 - DEBUG - stack []
2024-07-04 16:57:43,007 - DEBUG - end state. edges=[Edge(pc=40, stack=(), blockstack=(), npush=0)]
2024-07-04 16:57:43,007 - DEBUG - pending: deque([State(pc_initial=30 nstack_initial=0), State(pc_initial=40 nstack_initial=0), State(pc_initial=40 nstack_initial=0)])
2024-07-04 16:57:43,008 - DEBUG - stack: []
2024-07-04 16:57:43,008 - DEBUG - state.pc_initial: State(pc_initial=30 nstack_initial=0)
2024-07-04 16:57:43,008 - DEBUG - dispatch pc=30, inst=JUMP_FORWARD(arg=2, lineno=1145)
2024-07-04 16:57:43,008 - DEBUG - stack []
2024-07-04 16:57:43,009 - DEBUG - end state. edges=[Edge(pc=36, stack=(), blockstack=(), npush=0)]
2024-07-04 16:57:43,009 - DEBUG - pending: deque([State(pc_initial=40 nstack_initial=0), State(pc_initial=40 nstack_initial=0), State(pc_initial=36 nstack_initial=0)])
2024-07-04 16:57:43,009 - DEBUG - stack: []
2024-07-04 16:57:43,010 - DEBUG - state.pc_initial: State(pc_initial=40 nstack_initial=0)
2024-07-04 16:57:43,010 - DEBUG - dispatch pc=40, inst=LOAD_FAST(arg=0, lineno=1148)
2024-07-04 16:57:43,010 - DEBUG - stack []
2024-07-04 16:57:43,010 - DEBUG - dispatch pc=42, inst=LOAD_CONST(arg=2, lineno=1148)
2024-07-04 16:57:43,011 - DEBUG - stack ['$x40.0']
2024-07-04 16:57:43,011 - DEBUG - dispatch pc=44, inst=BINARY_SUBSCR(arg=None, lineno=1148)
2024-07-04 16:57:43,011 - DEBUG - stack ['$x40.0', '$const42.1']
2024-07-04 16:57:43,011 - DEBUG - dispatch pc=46, inst=STORE_FAST(arg=4, lineno=1148)
2024-07-04 16:57:43,012 - DEBUG - stack ['$44binary_subscr.2']
2024-07-04 16:57:43,012 - DEBUG - dispatch pc=48, inst=LOAD_FAST(arg=1, lineno=1149)
2024-07-04 16:57:43,012 - DEBUG - stack []
2024-07-04 16:57:43,012 - DEBUG - dispatch pc=50, inst=UNARY_NEGATIVE(arg=None, lineno=1149)
2024-07-04 16:57:43,012 - DEBUG - stack ['$threshold48.3']
2024-07-04 16:57:43,012 - DEBUG - dispatch pc=52, inst=LOAD_FAST(arg=4, lineno=1149)
2024-07-04 16:57:43,013 - DEBUG - stack ['$50unary_negative.4']
2024-07-04 16:57:43,013 - DEBUG - dispatch pc=54, inst=DUP_TOP(arg=None, lineno=1149)
2024-07-04 16:57:43,013 - DEBUG - stack ['$50unary_negative.4', '$x152.5']
2024-07-04 16:57:43,013 - DEBUG - dispatch pc=56, inst=ROT_THREE(arg=None, lineno=1149)
2024-07-04 16:57:43,013 - DEBUG - stack ['$50unary_negative.4', '$x152.5', '$54dup_top.6']
2024-07-04 16:57:43,013 - DEBUG - dispatch pc=58, inst=COMPARE_OP(arg=1, lineno=1149)
2024-07-04 16:57:43,014 - DEBUG - stack ['$54dup_top.6', '$50unary_negative.4', '$x152.5']
2024-07-04 16:57:43,014 - DEBUG - dispatch pc=60, inst=POP_JUMP_IF_FALSE(arg=36, lineno=1149)
2024-07-04 16:57:43,014 - DEBUG - stack ['$54dup_top.6', '$58compare_op.7']
2024-07-04 16:57:43,014 - DEBUG - end state. edges=[Edge(pc=62, stack=('$54dup_top.6',), blockstack=(), npush=0), Edge(pc=70, stack=('$54dup_top.6',), blockstack=(), npush=0)]
2024-07-04 16:57:43,014 - DEBUG - pending: deque([State(pc_initial=40 nstack_initial=0), State(pc_initial=36 nstack_initial=0), State(pc_initial=62 nstack_initial=1), State(pc_initial=70 nstack_initial=1)])
2024-07-04 16:57:43,015 - DEBUG - pending: deque([State(pc_initial=36 nstack_initial=0), State(pc_initial=62 nstack_initial=1), State(pc_initial=70 nstack_initial=1)])
2024-07-04 16:57:43,015 - DEBUG - stack: []
2024-07-04 16:57:43,015 - DEBUG - state.pc_initial: State(pc_initial=36 nstack_initial=0)
2024-07-04 16:57:43,015 - DEBUG - dispatch pc=36, inst=LOAD_CONST(arg=1, lineno=1146)
2024-07-04 16:57:43,016 - DEBUG - stack []
2024-07-04 16:57:43,016 - DEBUG - dispatch pc=38, inst=STORE_FAST(arg=3, lineno=1146)
2024-07-04 16:57:43,016 - DEBUG - stack ['$const36.0']
2024-07-04 16:57:43,016 - DEBUG - end state. edges=[Edge(pc=40, stack=(), blockstack=(), npush=0)]
2024-07-04 16:57:43,016 - DEBUG - pending: deque([State(pc_initial=62 nstack_initial=1), State(pc_initial=70 nstack_initial=1), State(pc_initial=40 nstack_initial=0)])
2024-07-04 16:57:43,017 - DEBUG - stack: ['$phi62.0']
2024-07-04 16:57:43,017 - DEBUG - state.pc_initial: State(pc_initial=62 nstack_initial=1)
2024-07-04 16:57:43,017 - DEBUG - dispatch pc=62, inst=LOAD_FAST(arg=1, lineno=1149)
2024-07-04 16:57:43,017 - DEBUG - stack ['$phi62.0']
2024-07-04 16:57:43,017 - DEBUG - dispatch pc=64, inst=COMPARE_OP(arg=1, lineno=1149)
2024-07-04 16:57:43,018 - DEBUG - stack ['$phi62.0', '$threshold62.1']
2024-07-04 16:57:43,018 - DEBUG - dispatch pc=66, inst=POP_JUMP_IF_FALSE(arg=40, lineno=1149)
2024-07-04 16:57:43,018 - DEBUG - stack ['$64compare_op.2']
2024-07-04 16:57:43,018 - DEBUG - end state. edges=[Edge(pc=68, stack=(), blockstack=(), npush=0), Edge(pc=78, stack=(), blockstack=(), npush=0)]
2024-07-04 16:57:43,018 - DEBUG - pending: deque([State(pc_initial=70 nstack_initial=1), State(pc_initial=40 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=78 nstack_initial=0)])
2024-07-04 16:57:43,019 - DEBUG - stack: ['$phi70.0']
2024-07-04 16:57:43,019 - DEBUG - state.pc_initial: State(pc_initial=70 nstack_initial=1)
2024-07-04 16:57:43,019 - DEBUG - dispatch pc=70, inst=POP_TOP(arg=None, lineno=1149)
2024-07-04 16:57:43,019 - DEBUG - stack ['$phi70.0']
2024-07-04 16:57:43,019 - DEBUG - dispatch pc=72, inst=JUMP_FORWARD(arg=2, lineno=1149)
2024-07-04 16:57:43,020 - DEBUG - stack []
2024-07-04 16:57:43,020 - DEBUG - end state. edges=[Edge(pc=78, stack=(), blockstack=(), npush=0)]
2024-07-04 16:57:43,020 - DEBUG - pending: deque([State(pc_initial=40 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=78 nstack_initial=0), State(pc_initial=78 nstack_initial=0)])
2024-07-04 16:57:43,020 - DEBUG - pending: deque([State(pc_initial=68 nstack_initial=0), State(pc_initial=78 nstack_initial=0), State(pc_initial=78 nstack_initial=0)])
2024-07-04 16:57:43,021 - DEBUG - stack: []
2024-07-04 16:57:43,022 - DEBUG - state.pc_initial: State(pc_initial=68 nstack_initial=0)
2024-07-04 16:57:43,023 - DEBUG - dispatch pc=68, inst=JUMP_FORWARD(arg=2, lineno=1149)
2024-07-04 16:57:43,024 - DEBUG - stack []
2024-07-04 16:57:43,024 - DEBUG - end state. edges=[Edge(pc=74, stack=(), blockstack=(), npush=0)]
2024-07-04 16:57:43,026 - DEBUG - pending: deque([State(pc_initial=78 nstack_initial=0), State(pc_initial=78 nstack_initial=0), State(pc_initial=74 nstack_initial=0)])
2024-07-04 16:57:43,027 - DEBUG - stack: []
2024-07-04 16:57:43,027 - DEBUG - state.pc_initial: State(pc_initial=78 nstack_initial=0)
2024-07-04 16:57:43,028 - DEBUG - dispatch pc=78, inst=LOAD_FAST(arg=2, lineno=1152)
2024-07-04 16:57:43,028 - DEBUG - stack []
2024-07-04 16:57:43,028 - DEBUG - dispatch pc=80, inst=POP_JUMP_IF_FALSE(arg=52, lineno=1152)
2024-07-04 16:57:43,028 - DEBUG - stack ['$zero_pos78.0']
2024-07-04 16:57:43,028 - DEBUG - end state. edges=[Edge(pc=82, stack=(), blockstack=(), npush=0), Edge(pc=102, stack=(), blockstack=(), npush=0)]
2024-07-04 16:57:43,034 - DEBUG - pending: deque([State(pc_initial=78 nstack_initial=0), State(pc_initial=74 nstack_initial=0), State(pc_initial=82 nstack_initial=0), State(pc_initial=102 nstack_initial=0)])
2024-07-04 16:57:43,050 - DEBUG - pending: deque([State(pc_initial=74 nstack_initial=0), State(pc_initial=82 nstack_initial=0), State(pc_initial=102 nstack_initial=0)])
2024-07-04 16:57:43,050 - DEBUG - stack: []
2024-07-04 16:57:43,051 - DEBUG - state.pc_initial: State(pc_initial=74 nstack_initial=0)
2024-07-04 16:57:43,051 - DEBUG - dispatch pc=74, inst=LOAD_CONST(arg=1, lineno=1150)
2024-07-04 16:57:43,051 - DEBUG - stack []
2024-07-04 16:57:43,052 - DEBUG - dispatch pc=76, inst=STORE_FAST(arg=4, lineno=1150)
2024-07-04 16:57:43,052 - DEBUG - stack ['$const74.0']
2024-07-04 16:57:43,052 - DEBUG - end state. edges=[Edge(pc=78, stack=(), blockstack=(), npush=0)]
2024-07-04 16:57:43,052 - DEBUG - pending: deque([State(pc_initial=82 nstack_initial=0), State(pc_initial=102 nstack_initial=0), State(pc_initial=78 nstack_initial=0)])
2024-07-04 16:57:43,053 - DEBUG - stack: []
2024-07-04 16:57:43,053 - DEBUG - state.pc_initial: State(pc_initial=82 nstack_initial=0)
2024-07-04 16:57:43,053 - DEBUG - dispatch pc=82, inst=LOAD_GLOBAL(arg=0, lineno=1153)
2024-07-04 16:57:43,054 - DEBUG - stack []
2024-07-04 16:57:43,054 - DEBUG - dispatch pc=84, inst=LOAD_METHOD(arg=1, lineno=1153)
2024-07-04 16:57:43,054 - DEBUG - stack ['$82load_global.0']
2024-07-04 16:57:43,054 - DEBUG - dispatch pc=86, inst=LOAD_FAST(arg=3, lineno=1153)
2024-07-04 16:57:43,055 - DEBUG - stack ['$84load_method.1']
2024-07-04 16:57:43,055 - DEBUG - dispatch pc=88, inst=CALL_METHOD(arg=1, lineno=1153)
2024-07-04 16:57:43,055 - DEBUG - stack ['$84load_method.1', '$x086.2']
2024-07-04 16:57:43,057 - DEBUG - dispatch pc=90, inst=LOAD_GLOBAL(arg=0, lineno=1153)
2024-07-04 16:57:43,057 - DEBUG - stack ['$88call_method.3']
2024-07-04 16:57:43,057 - DEBUG - dispatch pc=92, inst=LOAD_METHOD(arg=1, lineno=1153)
2024-07-04 16:57:43,058 - DEBUG - stack ['$88call_method.3', '$90load_global.4']
2024-07-04 16:57:43,058 - DEBUG - dispatch pc=94, inst=LOAD_FAST(arg=4, lineno=1153)
2024-07-04 16:57:43,058 - DEBUG - stack ['$88call_method.3', '$92load_method.5']
2024-07-04 16:57:43,059 - DEBUG - dispatch pc=96, inst=CALL_METHOD(arg=1, lineno=1153)
2024-07-04 16:57:43,059 - DEBUG - stack ['$88call_method.3', '$92load_method.5', '$x194.6']
2024-07-04 16:57:43,059 - DEBUG - dispatch pc=98, inst=COMPARE_OP(arg=3, lineno=1153)
2024-07-04 16:57:43,060 - DEBUG - stack ['$88call_method.3', '$96call_method.7']
2024-07-04 16:57:43,060 - DEBUG - dispatch pc=100, inst=RETURN_VALUE(arg=None, lineno=1153)
2024-07-04 16:57:43,060 - DEBUG - stack ['$98compare_op.8']
2024-07-04 16:57:43,060 - DEBUG - end state. edges=[]
2024-07-04 16:57:43,061 - DEBUG - pending: deque([State(pc_initial=102 nstack_initial=0), State(pc_initial=78 nstack_initial=0)])
2024-07-04 16:57:43,061 - DEBUG - stack: []
2024-07-04 16:57:43,061 - DEBUG - state.pc_initial: State(pc_initial=102 nstack_initial=0)
2024-07-04 16:57:43,061 - DEBUG - dispatch pc=102, inst=LOAD_GLOBAL(arg=0, lineno=1155)
2024-07-04 16:57:43,062 - DEBUG - stack []
2024-07-04 16:57:43,062 - DEBUG - dispatch pc=104, inst=LOAD_METHOD(arg=2, lineno=1155)
2024-07-04 16:57:43,062 - DEBUG - stack ['$102load_global.0']
2024-07-04 16:57:43,062 - DEBUG - dispatch pc=106, inst=LOAD_FAST(arg=3, lineno=1155)
2024-07-04 16:57:43,063 - DEBUG - stack ['$104load_method.1']
2024-07-04 16:57:43,064 - DEBUG - dispatch pc=108, inst=CALL_METHOD(arg=1, lineno=1155)
2024-07-04 16:57:43,064 - DEBUG - stack ['$104load_method.1', '$x0106.2']
2024-07-04 16:57:43,064 - DEBUG - dispatch pc=110, inst=LOAD_GLOBAL(arg=0, lineno=1155)
2024-07-04 16:57:43,065 - DEBUG - stack ['$108call_method.3']
2024-07-04 16:57:43,066 - DEBUG - dispatch pc=112, inst=LOAD_METHOD(arg=2, lineno=1155)
2024-07-04 16:57:43,066 - DEBUG - stack ['$108call_method.3', '$110load_global.4']
2024-07-04 16:57:43,067 - DEBUG - dispatch pc=114, inst=LOAD_FAST(arg=4, lineno=1155)
2024-07-04 16:57:43,067 - DEBUG - stack ['$108call_method.3', '$112load_method.5']
2024-07-04 16:57:43,068 - DEBUG - dispatch pc=116, inst=CALL_METHOD(arg=1, lineno=1155)
2024-07-04 16:57:43,069 - DEBUG - stack ['$108call_method.3', '$112load_method.5', '$x1114.6']
2024-07-04 16:57:43,070 - DEBUG - dispatch pc=118, inst=COMPARE_OP(arg=3, lineno=1155)
2024-07-04 16:57:43,070 - DEBUG - stack ['$108call_method.3', '$116call_method.7']
2024-07-04 16:57:43,070 - DEBUG - dispatch pc=120, inst=RETURN_VALUE(arg=None, lineno=1155)
2024-07-04 16:57:43,071 - DEBUG - stack ['$118compare_op.8']
2024-07-04 16:57:43,071 - DEBUG - end state. edges=[]
2024-07-04 16:57:43,071 - DEBUG - pending: deque([State(pc_initial=78 nstack_initial=0)])
2024-07-04 16:57:43,072 - DEBUG - -------------------------Prune PHIs-------------------------
2024-07-04 16:57:43,072 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=24 nstack_initial=1): {'$phi24.0'},
             State(pc_initial=30 nstack_initial=0): set(),
             State(pc_initial=32 nstack_initial=1): set(),
             State(pc_initial=36 nstack_initial=0): set(),
             State(pc_initial=40 nstack_initial=0): set(),
             State(pc_initial=62 nstack_initial=1): {'$phi62.0'},
             State(pc_initial=68 nstack_initial=0): set(),
             State(pc_initial=70 nstack_initial=1): set(),
             State(pc_initial=74 nstack_initial=0): set(),
             State(pc_initial=78 nstack_initial=0): set(),
             State(pc_initial=82 nstack_initial=0): set(),
             State(pc_initial=102 nstack_initial=0): set()})
2024-07-04 16:57:43,075 - DEBUG - defmap: {'$phi24.0': State(pc_initial=0 nstack_initial=0),
 '$phi32.0': State(pc_initial=0 nstack_initial=0),
 '$phi62.0': State(pc_initial=40 nstack_initial=0),
 '$phi70.0': State(pc_initial=40 nstack_initial=0)}
2024-07-04 16:57:43,076 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi24.0': {('$16dup_top.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.0': {('$16dup_top.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi62.0': {('$54dup_top.6',
                           State(pc_initial=40 nstack_initial=0))},
             '$phi70.0': {('$54dup_top.6',
                           State(pc_initial=40 nstack_initial=0))}})
2024-07-04 16:57:43,077 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi24.0': {('$16dup_top.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.0': {('$16dup_top.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi62.0': {('$54dup_top.6',
                           State(pc_initial=40 nstack_initial=0))},
             '$phi70.0': {('$54dup_top.6',
                           State(pc_initial=40 nstack_initial=0))}})
2024-07-04 16:57:43,078 - DEBUG - keep phismap: {'$phi24.0': {('$16dup_top.6', State(pc_initial=0 nstack_initial=0))},
 '$phi62.0': {('$54dup_top.6', State(pc_initial=40 nstack_initial=0))}}
2024-07-04 16:57:43,079 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi24.0': '$16dup_top.6'},
             State(pc_initial=40 nstack_initial=0): {'$phi62.0': '$54dup_top.6'}})
2024-07-04 16:57:43,080 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-07-04 16:57:43,080 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'res': '$const4.1'}), (6, {'index': '$const4.1', 'target': '$x2.0', 'res': '$6binary_subscr.2'}), (8, {'value': '$6binary_subscr.2'}), (10, {'res': '$threshold10.3'}), (12, {'value': '$threshold10.3', 'res': '$12unary_negative.4'}), (14, {'res': '$x014.5'}), (16, {'orig': ['$x014.5'], 'duped': ['$16dup_top.6']}), (20, {'lhs': '$12unary_negative.4', 'rhs': '$x014.5', 'res': '$20compare_op.7'}), (22, {'pred': '$20compare_op.7'})), outgoing_phis={'$phi24.0': '$16dup_top.6'}, blockstack=(), active_try_block=None, outgoing_edgepushed={24: ('$16dup_top.6',), 32: ('$16dup_top.6',)})
2024-07-04 16:57:43,081 - DEBUG - block_infos State(pc_initial=24 nstack_initial=1):
AdaptBlockInfo(insts=((24, {'res': '$threshold24.1'}), (26, {'lhs': '$phi24.0', 'rhs': '$threshold24.1', 'res': '$26compare_op.2'}), (28, {'pred': '$26compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={30: (), 40: ()})
2024-07-04 16:57:43,081 - DEBUG - block_infos State(pc_initial=30 nstack_initial=0):
AdaptBlockInfo(insts=((30, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={36: ()})
2024-07-04 16:57:43,082 - DEBUG - block_infos State(pc_initial=32 nstack_initial=1):
AdaptBlockInfo(insts=((34, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={40: ()})
2024-07-04 16:57:43,082 - DEBUG - block_infos State(pc_initial=36 nstack_initial=0):
AdaptBlockInfo(insts=((36, {'res': '$const36.0'}), (38, {'value': '$const36.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={40: ()})
2024-07-04 16:57:43,083 - DEBUG - block_infos State(pc_initial=40 nstack_initial=0):
AdaptBlockInfo(insts=((40, {'res': '$x40.0'}), (42, {'res': '$const42.1'}), (44, {'index': '$const42.1', 'target': '$x40.0', 'res': '$44binary_subscr.2'}), (46, {'value': '$44binary_subscr.2'}), (48, {'res': '$threshold48.3'}), (50, {'value': '$threshold48.3', 'res': '$50unary_negative.4'}), (52, {'res': '$x152.5'}), (54, {'orig': ['$x152.5'], 'duped': ['$54dup_top.6']}), (58, {'lhs': '$50unary_negative.4', 'rhs': '$x152.5', 'res': '$58compare_op.7'}), (60, {'pred': '$58compare_op.7'})), outgoing_phis={'$phi62.0': '$54dup_top.6'}, blockstack=(), active_try_block=None, outgoing_edgepushed={62: ('$54dup_top.6',), 70: ('$54dup_top.6',)})
2024-07-04 16:57:43,083 - DEBUG - block_infos State(pc_initial=62 nstack_initial=1):
AdaptBlockInfo(insts=((62, {'res': '$threshold62.1'}), (64, {'lhs': '$phi62.0', 'rhs': '$threshold62.1', 'res': '$64compare_op.2'}), (66, {'pred': '$64compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={68: (), 78: ()})
2024-07-04 16:57:43,084 - DEBUG - block_infos State(pc_initial=68 nstack_initial=0):
AdaptBlockInfo(insts=((68, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={74: ()})
2024-07-04 16:57:43,086 - DEBUG - block_infos State(pc_initial=70 nstack_initial=1):
AdaptBlockInfo(insts=((72, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={78: ()})
2024-07-04 16:57:43,087 - DEBUG - block_infos State(pc_initial=74 nstack_initial=0):
AdaptBlockInfo(insts=((74, {'res': '$const74.0'}), (76, {'value': '$const74.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={78: ()})
2024-07-04 16:57:43,088 - DEBUG - block_infos State(pc_initial=78 nstack_initial=0):
AdaptBlockInfo(insts=((78, {'res': '$zero_pos78.0'}), (80, {'pred': '$zero_pos78.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={82: (), 102: ()})
2024-07-04 16:57:43,089 - DEBUG - block_infos State(pc_initial=82 nstack_initial=0):
AdaptBlockInfo(insts=((82, {'res': '$82load_global.0'}), (84, {'item': '$82load_global.0', 'res': '$84load_method.1'}), (86, {'res': '$x086.2'}), (88, {'func': '$84load_method.1', 'args': ['$x086.2'], 'res': '$88call_method.3'}), (90, {'res': '$90load_global.4'}), (92, {'item': '$90load_global.4', 'res': '$92load_method.5'}), (94, {'res': '$x194.6'}), (96, {'func': '$92load_method.5', 'args': ['$x194.6'], 'res': '$96call_method.7'}), (98, {'lhs': '$88call_method.3', 'rhs': '$96call_method.7', 'res': '$98compare_op.8'}), (100, {'retval': '$98compare_op.8', 'castval': '$100return_value.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-04 16:57:43,090 - DEBUG - block_infos State(pc_initial=102 nstack_initial=0):
AdaptBlockInfo(insts=((102, {'res': '$102load_global.0'}), (104, {'item': '$102load_global.0', 'res': '$104load_method.1'}), (106, {'res': '$x0106.2'}), (108, {'func': '$104load_method.1', 'args': ['$x0106.2'], 'res': '$108call_method.3'}), (110, {'res': '$110load_global.4'}), (112, {'item': '$110load_global.4', 'res': '$112load_method.5'}), (114, {'res': '$x1114.6'}), (116, {'func': '$112load_method.5', 'args': ['$x1114.6'], 'res': '$116call_method.7'}), (118, {'lhs': '$108call_method.3', 'rhs': '$116call_method.7', 'res': '$118compare_op.8'}), (120, {'retval': '$118compare_op.8', 'castval': '$120return_value.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-04 16:57:43,093 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    threshold = arg(1, name=threshold)       ['threshold']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    $const4.1 = const(int, 0)                ['$const4.1']
    x0 = getitem(value=x, index=$const4.1, fn=<built-in function getitem>) ['$const4.1', 'x', 'x0']
    $12unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$12unary_negative.4', 'threshold']
    $20compare_op.7 = $12unary_negative.4 <= x0 ['$12unary_negative.4', '$20compare_op.7', 'x0']
    bool22 = global(bool: <class 'bool'>)    ['bool22']
    $22pred = call bool22($20compare_op.7, func=bool22, args=(Var($20compare_op.7, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$20compare_op.7', '$22pred', 'bool22']
    $phi24.0 = x0                            ['$phi24.0', 'x0']
    branch $22pred, 24, 32                   ['$22pred']
label 24:
    $26compare_op.2 = $phi24.0 <= threshold  ['$26compare_op.2', '$phi24.0', 'threshold']
    bool28 = global(bool: <class 'bool'>)    ['bool28']
    $28pred = call bool28($26compare_op.2, func=bool28, args=(Var($26compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$26compare_op.2', '$28pred', 'bool28']
    branch $28pred, 30, 40                   ['$28pred']
label 30:
    jump 36                                  []
label 32:
    jump 40                                  []
label 36:
    x0 = const(int, 0)                       ['x0']
    jump 40                                  []
label 40:
    $const42.1 = const(int, -1)              ['$const42.1']
    x1 = getitem(value=x, index=$const42.1, fn=<built-in function getitem>) ['$const42.1', 'x', 'x1']
    $50unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$50unary_negative.4', 'threshold']
    $58compare_op.7 = $50unary_negative.4 <= x1 ['$50unary_negative.4', '$58compare_op.7', 'x1']
    bool60 = global(bool: <class 'bool'>)    ['bool60']
    $60pred = call bool60($58compare_op.7, func=bool60, args=(Var($58compare_op.7, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None) ['$58compare_op.7', '$60pred', 'bool60']
    $phi62.0 = x1                            ['$phi62.0', 'x1']
    branch $60pred, 62, 70                   ['$60pred']
label 62:
    $64compare_op.2 = $phi62.0 <= threshold  ['$64compare_op.2', '$phi62.0', 'threshold']
    bool66 = global(bool: <class 'bool'>)    ['bool66']
    $66pred = call bool66($64compare_op.2, func=bool66, args=(Var($64compare_op.2, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None) ['$64compare_op.2', '$66pred', 'bool66']
    branch $66pred, 68, 78                   ['$66pred']
label 68:
    jump 74                                  []
label 70:
    jump 78                                  []
label 74:
    x1 = const(int, 0)                       ['x1']
    jump 78                                  []
label 78:
    bool80 = global(bool: <class 'bool'>)    ['bool80']
    $80pred = call bool80(zero_pos, func=bool80, args=(Var(zero_pos, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$80pred', 'bool80', 'zero_pos']
    branch $80pred, 82, 102                  ['$80pred']
label 82:
    $82load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\SPM\\Desktop\\ONLY SAVE FILES HERE\\speechwise-api\\.venv\\lib\\site-packages\\numpy\\__init__.py'>) ['$82load_global.0']
    $84load_method.1 = getattr(value=$82load_global.0, attr=signbit) ['$82load_global.0', '$84load_method.1']
    $88call_method.3 = call $84load_method.1(x0, func=$84load_method.1, args=[Var(x0, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$84load_method.1', '$88call_method.3', 'x0']
    $90load_global.4 = global(np: <module 'numpy' from 'C:\\Users\\SPM\\Desktop\\ONLY SAVE FILES HERE\\speechwise-api\\.venv\\lib\\site-packages\\numpy\\__init__.py'>) ['$90load_global.4']
    $92load_method.5 = getattr(value=$90load_global.4, attr=signbit) ['$90load_global.4', '$92load_method.5']
    $96call_method.7 = call $92load_method.5(x1, func=$92load_method.5, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None) ['$92load_method.5', '$96call_method.7', 'x1']
    $98compare_op.8 = $88call_method.3 != $96call_method.7 ['$88call_method.3', '$96call_method.7', '$98compare_op.8']
    $100return_value.9 = cast(value=$98compare_op.8) ['$100return_value.9', '$98compare_op.8']
    return $100return_value.9                ['$100return_value.9']
label 102:
    $102load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\SPM\\Desktop\\ONLY SAVE FILES HERE\\speechwise-api\\.venv\\lib\\site-packages\\numpy\\__init__.py'>) ['$102load_global.0']
    $104load_method.1 = getattr(value=$102load_global.0, attr=sign) ['$102load_global.0', '$104load_method.1']
    $108call_method.3 = call $104load_method.1(x0, func=$104load_method.1, args=[Var(x0, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$104load_method.1', '$108call_method.3', 'x0']
    $110load_global.4 = global(np: <module 'numpy' from 'C:\\Users\\SPM\\Desktop\\ONLY SAVE FILES HERE\\speechwise-api\\.venv\\lib\\site-packages\\numpy\\__init__.py'>) ['$110load_global.4']
    $112load_method.5 = getattr(value=$110load_global.4, attr=sign) ['$110load_global.4', '$112load_method.5']
    $116call_method.7 = call $112load_method.5(x1, func=$112load_method.5, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None) ['$112load_method.5', '$116call_method.7', 'x1']
    $118compare_op.8 = $108call_method.3 != $116call_method.7 ['$108call_method.3', '$116call_method.7', '$118compare_op.8']
    $120return_value.9 = cast(value=$118compare_op.8) ['$118compare_op.8', '$120return_value.9']
    return $120return_value.9                ['$120return_value.9']

2024-07-04 16:57:43,404 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1039)
           2	LOAD_FAST(arg=0, lineno=1042)
           4	LOAD_CONST(arg=1, lineno=1042)
           6	BINARY_SUBSCR(arg=None, lineno=1042)
           8	LOAD_FAST(arg=0, lineno=1042)
          10	LOAD_CONST(arg=2, lineno=1042)
          12	BINARY_SUBSCR(arg=None, lineno=1042)
          14	COMPARE_OP(arg=4, lineno=1042)
          16	LOAD_FAST(arg=0, lineno=1042)
          18	LOAD_CONST(arg=1, lineno=1042)
          20	BINARY_SUBSCR(arg=None, lineno=1042)
          22	LOAD_FAST(arg=0, lineno=1042)
          24	LOAD_CONST(arg=3, lineno=1042)
          26	BINARY_SUBSCR(arg=None, lineno=1042)
          28	COMPARE_OP(arg=5, lineno=1042)
          30	BINARY_AND(arg=None, lineno=1042)
          32	RETURN_VALUE(arg=None, lineno=1042)
2024-07-04 16:57:43,406 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-04 16:57:43,407 - DEBUG - stack: []
2024-07-04 16:57:43,407 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-04 16:57:43,407 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1039)
2024-07-04 16:57:43,408 - DEBUG - stack []
2024-07-04 16:57:43,408 - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=1042)
2024-07-04 16:57:43,408 - DEBUG - stack []
2024-07-04 16:57:43,408 - DEBUG - dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=1042)
2024-07-04 16:57:43,408 - DEBUG - stack ['$x2.0']
2024-07-04 16:57:43,408 - DEBUG - dispatch pc=6, inst=BINARY_SUBSCR(arg=None, lineno=1042)
2024-07-04 16:57:43,409 - DEBUG - stack ['$x2.0', '$const4.1']
2024-07-04 16:57:43,409 - DEBUG - dispatch pc=8, inst=LOAD_FAST(arg=0, lineno=1042)
2024-07-04 16:57:43,409 - DEBUG - stack ['$6binary_subscr.2']
2024-07-04 16:57:43,409 - DEBUG - dispatch pc=10, inst=LOAD_CONST(arg=2, lineno=1042)
2024-07-04 16:57:43,409 - DEBUG - stack ['$6binary_subscr.2', '$x8.3']
2024-07-04 16:57:43,410 - DEBUG - dispatch pc=12, inst=BINARY_SUBSCR(arg=None, lineno=1042)
2024-07-04 16:57:43,410 - DEBUG - stack ['$6binary_subscr.2', '$x8.3', '$const10.4']
2024-07-04 16:57:43,410 - DEBUG - dispatch pc=14, inst=COMPARE_OP(arg=4, lineno=1042)
2024-07-04 16:57:43,410 - DEBUG - stack ['$6binary_subscr.2', '$12binary_subscr.5']
2024-07-04 16:57:43,410 - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=1042)
2024-07-04 16:57:43,411 - DEBUG - stack ['$14compare_op.6']
2024-07-04 16:57:43,411 - DEBUG - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=1042)
2024-07-04 16:57:43,411 - DEBUG - stack ['$14compare_op.6', '$x16.7']
2024-07-04 16:57:43,411 - DEBUG - dispatch pc=20, inst=BINARY_SUBSCR(arg=None, lineno=1042)
2024-07-04 16:57:43,411 - DEBUG - stack ['$14compare_op.6', '$x16.7', '$const18.8']
2024-07-04 16:57:43,411 - DEBUG - dispatch pc=22, inst=LOAD_FAST(arg=0, lineno=1042)
2024-07-04 16:57:43,412 - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9']
2024-07-04 16:57:43,412 - DEBUG - dispatch pc=24, inst=LOAD_CONST(arg=3, lineno=1042)
2024-07-04 16:57:43,412 - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9', '$x22.10']
2024-07-04 16:57:43,412 - DEBUG - dispatch pc=26, inst=BINARY_SUBSCR(arg=None, lineno=1042)
2024-07-04 16:57:43,412 - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9', '$x22.10', '$const24.11']
2024-07-04 16:57:43,413 - DEBUG - dispatch pc=28, inst=COMPARE_OP(arg=5, lineno=1042)
2024-07-04 16:57:43,413 - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9', '$26binary_subscr.12']
2024-07-04 16:57:43,413 - DEBUG - dispatch pc=30, inst=BINARY_AND(arg=None, lineno=1042)
2024-07-04 16:57:43,413 - DEBUG - stack ['$14compare_op.6', '$28compare_op.13']
2024-07-04 16:57:43,413 - DEBUG - dispatch pc=32, inst=RETURN_VALUE(arg=None, lineno=1042)
2024-07-04 16:57:43,413 - DEBUG - stack ['$30binary_and.14']
2024-07-04 16:57:43,414 - DEBUG - end state. edges=[]
2024-07-04 16:57:43,414 - DEBUG - -------------------------Prune PHIs-------------------------
2024-07-04 16:57:43,414 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-07-04 16:57:43,414 - DEBUG - defmap: {}
2024-07-04 16:57:43,415 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-07-04 16:57:43,415 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-07-04 16:57:43,415 - DEBUG - keep phismap: {}
2024-07-04 16:57:43,416 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-07-04 16:57:43,416 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-07-04 16:57:43,416 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'res': '$const4.1'}), (6, {'index': '$const4.1', 'target': '$x2.0', 'res': '$6binary_subscr.2'}), (8, {'res': '$x8.3'}), (10, {'res': '$const10.4'}), (12, {'index': '$const10.4', 'target': '$x8.3', 'res': '$12binary_subscr.5'}), (14, {'lhs': '$6binary_subscr.2', 'rhs': '$12binary_subscr.5', 'res': '$14compare_op.6'}), (16, {'res': '$x16.7'}), (18, {'res': '$const18.8'}), (20, {'index': '$const18.8', 'target': '$x16.7', 'res': '$20binary_subscr.9'}), (22, {'res': '$x22.10'}), (24, {'res': '$const24.11'}), (26, {'index': '$const24.11', 'target': '$x22.10', 'res': '$26binary_subscr.12'}), (28, {'lhs': '$20binary_subscr.9', 'rhs': '$26binary_subscr.12', 'res': '$28compare_op.13'}), (30, {'lhs': '$14compare_op.6', 'rhs': '$28compare_op.13', 'res': '$30binary_and.14'}), (32, {'retval': '$30binary_and.14', 'castval': '$32return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-04 16:57:43,417 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    $const4.1 = const(int, 0)                ['$const4.1']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1', 'x']
    $const10.4 = const(int, -1)              ['$const10.4']
    $12binary_subscr.5 = getitem(value=x, index=$const10.4, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4', 'x']
    $14compare_op.6 = $6binary_subscr.2 > $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
    $const18.8 = const(int, 0)               ['$const18.8']
    $20binary_subscr.9 = getitem(value=x, index=$const18.8, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8', 'x']
    $const24.11 = const(int, 1)              ['$const24.11']
    $26binary_subscr.12 = getitem(value=x, index=$const24.11, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11', 'x']
    $28compare_op.13 = $20binary_subscr.9 >= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
    $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
    $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
    return $32return_value.15                ['$32return_value.15']

2024-07-04 16:57:43,419 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1045)
           2	LOAD_FAST(arg=0, lineno=1048)
           4	LOAD_CONST(arg=1, lineno=1048)
           6	BINARY_SUBSCR(arg=None, lineno=1048)
           8	LOAD_FAST(arg=0, lineno=1048)
          10	LOAD_CONST(arg=2, lineno=1048)
          12	BINARY_SUBSCR(arg=None, lineno=1048)
          14	COMPARE_OP(arg=0, lineno=1048)
          16	LOAD_FAST(arg=0, lineno=1048)
          18	LOAD_CONST(arg=1, lineno=1048)
          20	BINARY_SUBSCR(arg=None, lineno=1048)
          22	LOAD_FAST(arg=0, lineno=1048)
          24	LOAD_CONST(arg=3, lineno=1048)
          26	BINARY_SUBSCR(arg=None, lineno=1048)
          28	COMPARE_OP(arg=1, lineno=1048)
          30	BINARY_AND(arg=None, lineno=1048)
          32	RETURN_VALUE(arg=None, lineno=1048)
2024-07-04 16:57:43,421 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-04 16:57:43,421 - DEBUG - stack: []
2024-07-04 16:57:43,421 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-04 16:57:43,421 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1045)
2024-07-04 16:57:43,421 - DEBUG - stack []
2024-07-04 16:57:43,422 - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=1048)
2024-07-04 16:57:43,422 - DEBUG - stack []
2024-07-04 16:57:43,422 - DEBUG - dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=1048)
2024-07-04 16:57:43,422 - DEBUG - stack ['$x2.0']
2024-07-04 16:57:43,422 - DEBUG - dispatch pc=6, inst=BINARY_SUBSCR(arg=None, lineno=1048)
2024-07-04 16:57:43,423 - DEBUG - stack ['$x2.0', '$const4.1']
2024-07-04 16:57:43,423 - DEBUG - dispatch pc=8, inst=LOAD_FAST(arg=0, lineno=1048)
2024-07-04 16:57:43,423 - DEBUG - stack ['$6binary_subscr.2']
2024-07-04 16:57:43,423 - DEBUG - dispatch pc=10, inst=LOAD_CONST(arg=2, lineno=1048)
2024-07-04 16:57:43,423 - DEBUG - stack ['$6binary_subscr.2', '$x8.3']
2024-07-04 16:57:43,424 - DEBUG - dispatch pc=12, inst=BINARY_SUBSCR(arg=None, lineno=1048)
2024-07-04 16:57:43,424 - DEBUG - stack ['$6binary_subscr.2', '$x8.3', '$const10.4']
2024-07-04 16:57:43,424 - DEBUG - dispatch pc=14, inst=COMPARE_OP(arg=0, lineno=1048)
2024-07-04 16:57:43,424 - DEBUG - stack ['$6binary_subscr.2', '$12binary_subscr.5']
2024-07-04 16:57:43,424 - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=1048)
2024-07-04 16:57:43,425 - DEBUG - stack ['$14compare_op.6']
2024-07-04 16:57:43,425 - DEBUG - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=1048)
2024-07-04 16:57:43,425 - DEBUG - stack ['$14compare_op.6', '$x16.7']
2024-07-04 16:57:43,425 - DEBUG - dispatch pc=20, inst=BINARY_SUBSCR(arg=None, lineno=1048)
2024-07-04 16:57:43,425 - DEBUG - stack ['$14compare_op.6', '$x16.7', '$const18.8']
2024-07-04 16:57:43,426 - DEBUG - dispatch pc=22, inst=LOAD_FAST(arg=0, lineno=1048)
2024-07-04 16:57:43,426 - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9']
2024-07-04 16:57:43,426 - DEBUG - dispatch pc=24, inst=LOAD_CONST(arg=3, lineno=1048)
2024-07-04 16:57:43,426 - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9', '$x22.10']
2024-07-04 16:57:43,427 - DEBUG - dispatch pc=26, inst=BINARY_SUBSCR(arg=None, lineno=1048)
2024-07-04 16:57:43,427 - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9', '$x22.10', '$const24.11']
2024-07-04 16:57:43,427 - DEBUG - dispatch pc=28, inst=COMPARE_OP(arg=1, lineno=1048)
2024-07-04 16:57:43,427 - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9', '$26binary_subscr.12']
2024-07-04 16:57:43,428 - DEBUG - dispatch pc=30, inst=BINARY_AND(arg=None, lineno=1048)
2024-07-04 16:57:43,428 - DEBUG - stack ['$14compare_op.6', '$28compare_op.13']
2024-07-04 16:57:43,428 - DEBUG - dispatch pc=32, inst=RETURN_VALUE(arg=None, lineno=1048)
2024-07-04 16:57:43,428 - DEBUG - stack ['$30binary_and.14']
2024-07-04 16:57:43,429 - DEBUG - end state. edges=[]
2024-07-04 16:57:43,429 - DEBUG - -------------------------Prune PHIs-------------------------
2024-07-04 16:57:43,429 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-07-04 16:57:43,429 - DEBUG - defmap: {}
2024-07-04 16:57:43,429 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-07-04 16:57:43,430 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-07-04 16:57:43,430 - DEBUG - keep phismap: {}
2024-07-04 16:57:43,430 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-07-04 16:57:43,430 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-07-04 16:57:43,430 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'res': '$const4.1'}), (6, {'index': '$const4.1', 'target': '$x2.0', 'res': '$6binary_subscr.2'}), (8, {'res': '$x8.3'}), (10, {'res': '$const10.4'}), (12, {'index': '$const10.4', 'target': '$x8.3', 'res': '$12binary_subscr.5'}), (14, {'lhs': '$6binary_subscr.2', 'rhs': '$12binary_subscr.5', 'res': '$14compare_op.6'}), (16, {'res': '$x16.7'}), (18, {'res': '$const18.8'}), (20, {'index': '$const18.8', 'target': '$x16.7', 'res': '$20binary_subscr.9'}), (22, {'res': '$x22.10'}), (24, {'res': '$const24.11'}), (26, {'index': '$const24.11', 'target': '$x22.10', 'res': '$26binary_subscr.12'}), (28, {'lhs': '$20binary_subscr.9', 'rhs': '$26binary_subscr.12', 'res': '$28compare_op.13'}), (30, {'lhs': '$14compare_op.6', 'rhs': '$28compare_op.13', 'res': '$30binary_and.14'}), (32, {'retval': '$30binary_and.14', 'castval': '$32return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-04 16:57:43,432 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    $const4.1 = const(int, 0)                ['$const4.1']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1', 'x']
    $const10.4 = const(int, -1)              ['$const10.4']
    $12binary_subscr.5 = getitem(value=x, index=$const10.4, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4', 'x']
    $14compare_op.6 = $6binary_subscr.2 < $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
    $const18.8 = const(int, 0)               ['$const18.8']
    $20binary_subscr.9 = getitem(value=x, index=$const18.8, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8', 'x']
    $const24.11 = const(int, 1)              ['$const24.11']
    $26binary_subscr.12 = getitem(value=x, index=$const24.11, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11', 'x']
    $28compare_op.13 = $20binary_subscr.9 <= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
    $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
    $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
    return $32return_value.15                ['$32return_value.15']

2024-07-04 16:57:44,007 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=425)
           2	LOAD_FAST(arg=0, lineno=428)
           4	LOAD_CONST(arg=1, lineno=428)
           6	BINARY_SUBSCR(arg=None, lineno=428)
           8	LOAD_FAST(arg=0, lineno=428)
          10	LOAD_CONST(arg=2, lineno=428)
          12	BINARY_SUBSCR(arg=None, lineno=428)
          14	BINARY_ADD(arg=None, lineno=428)
          16	LOAD_CONST(arg=3, lineno=428)
          18	LOAD_FAST(arg=0, lineno=428)
          20	LOAD_CONST(arg=4, lineno=428)
          22	BINARY_SUBSCR(arg=None, lineno=428)
          24	BINARY_MULTIPLY(arg=None, lineno=428)
          26	BINARY_SUBTRACT(arg=None, lineno=428)
          28	STORE_FAST(arg=1, lineno=428)
          30	LOAD_FAST(arg=0, lineno=429)
          32	LOAD_CONST(arg=1, lineno=429)
          34	BINARY_SUBSCR(arg=None, lineno=429)
          36	LOAD_FAST(arg=0, lineno=429)
          38	LOAD_CONST(arg=2, lineno=429)
          40	BINARY_SUBSCR(arg=None, lineno=429)
          42	BINARY_SUBTRACT(arg=None, lineno=429)
          44	LOAD_CONST(arg=3, lineno=429)
          46	BINARY_TRUE_DIVIDE(arg=None, lineno=429)
          48	STORE_FAST(arg=2, lineno=429)
          50	LOAD_GLOBAL(arg=0, lineno=431)
          52	LOAD_METHOD(arg=1, lineno=431)
          54	LOAD_FAST(arg=2, lineno=431)
          56	CALL_METHOD(arg=1, lineno=431)
          58	LOAD_GLOBAL(arg=0, lineno=431)
          60	LOAD_METHOD(arg=1, lineno=431)
          62	LOAD_FAST(arg=1, lineno=431)
          64	CALL_METHOD(arg=1, lineno=431)
          66	COMPARE_OP(arg=5, lineno=431)
          68	POP_JUMP_IF_FALSE(arg=38, lineno=431)
          70	LOAD_CONST(arg=4, lineno=434)
          72	RETURN_VALUE(arg=None, lineno=434)
>         74	LOAD_FAST(arg=2, lineno=436)
          76	UNARY_NEGATIVE(arg=None, lineno=436)
          78	LOAD_FAST(arg=1, lineno=436)
          80	BINARY_TRUE_DIVIDE(arg=None, lineno=436)
          82	RETURN_VALUE(arg=None, lineno=436)
2024-07-04 16:57:44,011 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-04 16:57:44,011 - DEBUG - stack: []
2024-07-04 16:57:44,011 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-04 16:57:44,012 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=425)
2024-07-04 16:57:44,012 - DEBUG - stack []
2024-07-04 16:57:44,012 - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=428)
2024-07-04 16:57:44,012 - DEBUG - stack []
2024-07-04 16:57:44,012 - DEBUG - dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=428)
2024-07-04 16:57:44,013 - DEBUG - stack ['$x2.0']
2024-07-04 16:57:44,013 - DEBUG - dispatch pc=6, inst=BINARY_SUBSCR(arg=None, lineno=428)
2024-07-04 16:57:44,013 - DEBUG - stack ['$x2.0', '$const4.1']
2024-07-04 16:57:44,013 - DEBUG - dispatch pc=8, inst=LOAD_FAST(arg=0, lineno=428)
2024-07-04 16:57:44,013 - DEBUG - stack ['$6binary_subscr.2']
2024-07-04 16:57:44,014 - DEBUG - dispatch pc=10, inst=LOAD_CONST(arg=2, lineno=428)
2024-07-04 16:57:44,014 - DEBUG - stack ['$6binary_subscr.2', '$x8.3']
2024-07-04 16:57:44,014 - DEBUG - dispatch pc=12, inst=BINARY_SUBSCR(arg=None, lineno=428)
2024-07-04 16:57:44,014 - DEBUG - stack ['$6binary_subscr.2', '$x8.3', '$const10.4']
2024-07-04 16:57:44,014 - DEBUG - dispatch pc=14, inst=BINARY_ADD(arg=None, lineno=428)
2024-07-04 16:57:44,014 - DEBUG - stack ['$6binary_subscr.2', '$12binary_subscr.5']
2024-07-04 16:57:44,015 - DEBUG - dispatch pc=16, inst=LOAD_CONST(arg=3, lineno=428)
2024-07-04 16:57:44,015 - DEBUG - stack ['$14binary_add.6']
2024-07-04 16:57:44,015 - DEBUG - dispatch pc=18, inst=LOAD_FAST(arg=0, lineno=428)
2024-07-04 16:57:44,015 - DEBUG - stack ['$14binary_add.6', '$const16.7']
2024-07-04 16:57:44,015 - DEBUG - dispatch pc=20, inst=LOAD_CONST(arg=4, lineno=428)
2024-07-04 16:57:44,015 - DEBUG - stack ['$14binary_add.6', '$const16.7', '$x18.8']
2024-07-04 16:57:44,016 - DEBUG - dispatch pc=22, inst=BINARY_SUBSCR(arg=None, lineno=428)
2024-07-04 16:57:44,016 - DEBUG - stack ['$14binary_add.6', '$const16.7', '$x18.8', '$const20.9']
2024-07-04 16:57:44,016 - DEBUG - dispatch pc=24, inst=BINARY_MULTIPLY(arg=None, lineno=428)
2024-07-04 16:57:44,016 - DEBUG - stack ['$14binary_add.6', '$const16.7', '$22binary_subscr.10']
2024-07-04 16:57:44,016 - DEBUG - dispatch pc=26, inst=BINARY_SUBTRACT(arg=None, lineno=428)
2024-07-04 16:57:44,017 - DEBUG - stack ['$14binary_add.6', '$24binary_multiply.11']
2024-07-04 16:57:44,017 - DEBUG - dispatch pc=28, inst=STORE_FAST(arg=1, lineno=428)
2024-07-04 16:57:44,017 - DEBUG - stack ['$26binary_subtract.12']
2024-07-04 16:57:44,017 - DEBUG - dispatch pc=30, inst=LOAD_FAST(arg=0, lineno=429)
2024-07-04 16:57:44,017 - DEBUG - stack []
2024-07-04 16:57:44,017 - DEBUG - dispatch pc=32, inst=LOAD_CONST(arg=1, lineno=429)
2024-07-04 16:57:44,018 - DEBUG - stack ['$x30.13']
2024-07-04 16:57:44,018 - DEBUG - dispatch pc=34, inst=BINARY_SUBSCR(arg=None, lineno=429)
2024-07-04 16:57:44,018 - DEBUG - stack ['$x30.13', '$const32.14']
2024-07-04 16:57:44,018 - DEBUG - dispatch pc=36, inst=LOAD_FAST(arg=0, lineno=429)
2024-07-04 16:57:44,018 - DEBUG - stack ['$34binary_subscr.15']
2024-07-04 16:57:44,019 - DEBUG - dispatch pc=38, inst=LOAD_CONST(arg=2, lineno=429)
2024-07-04 16:57:44,019 - DEBUG - stack ['$34binary_subscr.15', '$x36.16']
2024-07-04 16:57:44,019 - DEBUG - dispatch pc=40, inst=BINARY_SUBSCR(arg=None, lineno=429)
2024-07-04 16:57:44,019 - DEBUG - stack ['$34binary_subscr.15', '$x36.16', '$const38.17']
2024-07-04 16:57:44,019 - DEBUG - dispatch pc=42, inst=BINARY_SUBTRACT(arg=None, lineno=429)
2024-07-04 16:57:44,020 - DEBUG - stack ['$34binary_subscr.15', '$40binary_subscr.18']
2024-07-04 16:57:44,020 - DEBUG - dispatch pc=44, inst=LOAD_CONST(arg=3, lineno=429)
2024-07-04 16:57:44,020 - DEBUG - stack ['$42binary_subtract.19']
2024-07-04 16:57:44,020 - DEBUG - dispatch pc=46, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=429)
2024-07-04 16:57:44,020 - DEBUG - stack ['$42binary_subtract.19', '$const44.20']
2024-07-04 16:57:44,021 - DEBUG - dispatch pc=48, inst=STORE_FAST(arg=2, lineno=429)
2024-07-04 16:57:44,021 - DEBUG - stack ['$46binary_true_divide.21']
2024-07-04 16:57:44,021 - DEBUG - dispatch pc=50, inst=LOAD_GLOBAL(arg=0, lineno=431)
2024-07-04 16:57:44,021 - DEBUG - stack []
2024-07-04 16:57:44,021 - DEBUG - dispatch pc=52, inst=LOAD_METHOD(arg=1, lineno=431)
2024-07-04 16:57:44,021 - DEBUG - stack ['$50load_global.22']
2024-07-04 16:57:44,022 - DEBUG - dispatch pc=54, inst=LOAD_FAST(arg=2, lineno=431)
2024-07-04 16:57:44,022 - DEBUG - stack ['$52load_method.23']
2024-07-04 16:57:44,022 - DEBUG - dispatch pc=56, inst=CALL_METHOD(arg=1, lineno=431)
2024-07-04 16:57:44,022 - DEBUG - stack ['$52load_method.23', '$b54.24']
2024-07-04 16:57:44,022 - DEBUG - dispatch pc=58, inst=LOAD_GLOBAL(arg=0, lineno=431)
2024-07-04 16:57:44,022 - DEBUG - stack ['$56call_method.25']
2024-07-04 16:57:44,023 - DEBUG - dispatch pc=60, inst=LOAD_METHOD(arg=1, lineno=431)
2024-07-04 16:57:44,023 - DEBUG - stack ['$56call_method.25', '$58load_global.26']
2024-07-04 16:57:44,023 - DEBUG - dispatch pc=62, inst=LOAD_FAST(arg=1, lineno=431)
2024-07-04 16:57:44,023 - DEBUG - stack ['$56call_method.25', '$60load_method.27']
2024-07-04 16:57:44,024 - DEBUG - dispatch pc=64, inst=CALL_METHOD(arg=1, lineno=431)
2024-07-04 16:57:44,024 - DEBUG - stack ['$56call_method.25', '$60load_method.27', '$a62.28']
2024-07-04 16:57:44,024 - DEBUG - dispatch pc=66, inst=COMPARE_OP(arg=5, lineno=431)
2024-07-04 16:57:44,024 - DEBUG - stack ['$56call_method.25', '$64call_method.29']
2024-07-04 16:57:44,024 - DEBUG - dispatch pc=68, inst=POP_JUMP_IF_FALSE(arg=38, lineno=431)
2024-07-04 16:57:44,025 - DEBUG - stack ['$66compare_op.30']
2024-07-04 16:57:44,025 - DEBUG - end state. edges=[Edge(pc=70, stack=(), blockstack=(), npush=0), Edge(pc=74, stack=(), blockstack=(), npush=0)]
2024-07-04 16:57:44,025 - DEBUG - pending: deque([State(pc_initial=70 nstack_initial=0), State(pc_initial=74 nstack_initial=0)])
2024-07-04 16:57:44,025 - DEBUG - stack: []
2024-07-04 16:57:44,025 - DEBUG - state.pc_initial: State(pc_initial=70 nstack_initial=0)
2024-07-04 16:57:44,026 - DEBUG - dispatch pc=70, inst=LOAD_CONST(arg=4, lineno=434)
2024-07-04 16:57:44,026 - DEBUG - stack []
2024-07-04 16:57:44,026 - DEBUG - dispatch pc=72, inst=RETURN_VALUE(arg=None, lineno=434)
2024-07-04 16:57:44,026 - DEBUG - stack ['$const70.0']
2024-07-04 16:57:44,026 - DEBUG - end state. edges=[]
2024-07-04 16:57:44,027 - DEBUG - pending: deque([State(pc_initial=74 nstack_initial=0)])
2024-07-04 16:57:44,027 - DEBUG - stack: []
2024-07-04 16:57:44,027 - DEBUG - state.pc_initial: State(pc_initial=74 nstack_initial=0)
2024-07-04 16:57:44,027 - DEBUG - dispatch pc=74, inst=LOAD_FAST(arg=2, lineno=436)
2024-07-04 16:57:44,028 - DEBUG - stack []
2024-07-04 16:57:44,028 - DEBUG - dispatch pc=76, inst=UNARY_NEGATIVE(arg=None, lineno=436)
2024-07-04 16:57:44,028 - DEBUG - stack ['$b74.0']
2024-07-04 16:57:44,028 - DEBUG - dispatch pc=78, inst=LOAD_FAST(arg=1, lineno=436)
2024-07-04 16:57:44,029 - DEBUG - stack ['$76unary_negative.1']
2024-07-04 16:57:44,029 - DEBUG - dispatch pc=80, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=436)
2024-07-04 16:57:44,030 - DEBUG - stack ['$76unary_negative.1', '$a78.2']
2024-07-04 16:57:44,030 - DEBUG - dispatch pc=82, inst=RETURN_VALUE(arg=None, lineno=436)
2024-07-04 16:57:44,030 - DEBUG - stack ['$80binary_true_divide.3']
2024-07-04 16:57:44,030 - DEBUG - end state. edges=[]
2024-07-04 16:57:44,030 - DEBUG - -------------------------Prune PHIs-------------------------
2024-07-04 16:57:44,030 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=70 nstack_initial=0): set(),
             State(pc_initial=74 nstack_initial=0): set()})
2024-07-04 16:57:44,031 - DEBUG - defmap: {}
2024-07-04 16:57:44,031 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-07-04 16:57:44,032 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-07-04 16:57:44,032 - DEBUG - keep phismap: {}
2024-07-04 16:57:44,032 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-07-04 16:57:44,032 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-07-04 16:57:44,032 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'res': '$const4.1'}), (6, {'index': '$const4.1', 'target': '$x2.0', 'res': '$6binary_subscr.2'}), (8, {'res': '$x8.3'}), (10, {'res': '$const10.4'}), (12, {'index': '$const10.4', 'target': '$x8.3', 'res': '$12binary_subscr.5'}), (14, {'lhs': '$6binary_subscr.2', 'rhs': '$12binary_subscr.5', 'res': '$14binary_add.6'}), (16, {'res': '$const16.7'}), (18, {'res': '$x18.8'}), (20, {'res': '$const20.9'}), (22, {'index': '$const20.9', 'target': '$x18.8', 'res': '$22binary_subscr.10'}), (24, {'lhs': '$const16.7', 'rhs': '$22binary_subscr.10', 'res': '$24binary_multiply.11'}), (26, {'lhs': '$14binary_add.6', 'rhs': '$24binary_multiply.11', 'res': '$26binary_subtract.12'}), (28, {'value': '$26binary_subtract.12'}), (30, {'res': '$x30.13'}), (32, {'res': '$const32.14'}), (34, {'index': '$const32.14', 'target': '$x30.13', 'res': '$34binary_subscr.15'}), (36, {'res': '$x36.16'}), (38, {'res': '$const38.17'}), (40, {'index': '$const38.17', 'target': '$x36.16', 'res': '$40binary_subscr.18'}), (42, {'lhs': '$34binary_subscr.15', 'rhs': '$40binary_subscr.18', 'res': '$42binary_subtract.19'}), (44, {'res': '$const44.20'}), (46, {'lhs': '$42binary_subtract.19', 'rhs': '$const44.20', 'res': '$46binary_true_divide.21'}), (48, {'value': '$46binary_true_divide.21'}), (50, {'res': '$50load_global.22'}), (52, {'item': '$50load_global.22', 'res': '$52load_method.23'}), (54, {'res': '$b54.24'}), (56, {'func': '$52load_method.23', 'args': ['$b54.24'], 'res': '$56call_method.25'}), (58, {'res': '$58load_global.26'}), (60, {'item': '$58load_global.26', 'res': '$60load_method.27'}), (62, {'res': '$a62.28'}), (64, {'func': '$60load_method.27', 'args': ['$a62.28'], 'res': '$64call_method.29'}), (66, {'lhs': '$56call_method.25', 'rhs': '$64call_method.29', 'res': '$66compare_op.30'}), (68, {'pred': '$66compare_op.30'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={70: (), 74: ()})
2024-07-04 16:57:44,034 - DEBUG - block_infos State(pc_initial=70 nstack_initial=0):
AdaptBlockInfo(insts=((70, {'res': '$const70.0'}), (72, {'retval': '$const70.0', 'castval': '$72return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-04 16:57:44,034 - DEBUG - block_infos State(pc_initial=74 nstack_initial=0):
AdaptBlockInfo(insts=((74, {'res': '$b74.0'}), (76, {'value': '$b74.0', 'res': '$76unary_negative.1'}), (78, {'res': '$a78.2'}), (80, {'lhs': '$76unary_negative.1', 'rhs': '$a78.2', 'res': '$80binary_true_divide.3'}), (82, {'retval': '$80binary_true_divide.3', 'castval': '$82return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-04 16:57:44,035 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    $const4.1 = const(int, 1)                ['$const4.1']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1', 'x']
    $const10.4 = const(int, -1)              ['$const10.4']
    $12binary_subscr.5 = getitem(value=x, index=$const10.4, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4', 'x']
    $14binary_add.6 = $6binary_subscr.2 + $12binary_subscr.5 ['$12binary_subscr.5', '$14binary_add.6', '$6binary_subscr.2']
    $const16.7 = const(int, 2)               ['$const16.7']
    $const20.9 = const(int, 0)               ['$const20.9']
    $22binary_subscr.10 = getitem(value=x, index=$const20.9, fn=<built-in function getitem>) ['$22binary_subscr.10', '$const20.9', 'x']
    $24binary_multiply.11 = $const16.7 * $22binary_subscr.10 ['$22binary_subscr.10', '$24binary_multiply.11', '$const16.7']
    a = $14binary_add.6 - $24binary_multiply.11 ['$14binary_add.6', '$24binary_multiply.11', 'a']
    $const32.14 = const(int, 1)              ['$const32.14']
    $34binary_subscr.15 = getitem(value=x, index=$const32.14, fn=<built-in function getitem>) ['$34binary_subscr.15', '$const32.14', 'x']
    $const38.17 = const(int, -1)             ['$const38.17']
    $40binary_subscr.18 = getitem(value=x, index=$const38.17, fn=<built-in function getitem>) ['$40binary_subscr.18', '$const38.17', 'x']
    $42binary_subtract.19 = $34binary_subscr.15 - $40binary_subscr.18 ['$34binary_subscr.15', '$40binary_subscr.18', '$42binary_subtract.19']
    $const44.20 = const(int, 2)              ['$const44.20']
    b = $42binary_subtract.19 / $const44.20  ['$42binary_subtract.19', '$const44.20', 'b']
    $50load_global.22 = global(np: <module 'numpy' from 'C:\\Users\\SPM\\Desktop\\ONLY SAVE FILES HERE\\speechwise-api\\.venv\\lib\\site-packages\\numpy\\__init__.py'>) ['$50load_global.22']
    $52load_method.23 = getattr(value=$50load_global.22, attr=abs) ['$50load_global.22', '$52load_method.23']
    $56call_method.25 = call $52load_method.23(b, func=$52load_method.23, args=[Var(b, pitch.py:429)], kws=(), vararg=None, varkwarg=None, target=None) ['$52load_method.23', '$56call_method.25', 'b']
    $58load_global.26 = global(np: <module 'numpy' from 'C:\\Users\\SPM\\Desktop\\ONLY SAVE FILES HERE\\speechwise-api\\.venv\\lib\\site-packages\\numpy\\__init__.py'>) ['$58load_global.26']
    $60load_method.27 = getattr(value=$58load_global.26, attr=abs) ['$58load_global.26', '$60load_method.27']
    $64call_method.29 = call $60load_method.27(a, func=$60load_method.27, args=[Var(a, pitch.py:428)], kws=(), vararg=None, varkwarg=None, target=None) ['$60load_method.27', '$64call_method.29', 'a']
    $66compare_op.30 = $56call_method.25 >= $64call_method.29 ['$56call_method.25', '$64call_method.29', '$66compare_op.30']
    bool68 = global(bool: <class 'bool'>)    ['bool68']
    $68pred = call bool68($66compare_op.30, func=bool68, args=(Var($66compare_op.30, pitch.py:431),), kws=(), vararg=None, varkwarg=None, target=None) ['$66compare_op.30', '$68pred', 'bool68']
    branch $68pred, 70, 74                   ['$68pred']
label 70:
    $const70.0 = const(int, 0)               ['$const70.0']
    $72return_value.1 = cast(value=$const70.0) ['$72return_value.1', '$const70.0']
    return $72return_value.1                 ['$72return_value.1']
label 74:
    $76unary_negative.1 = unary(fn=<built-in function neg>, value=b) ['$76unary_negative.1', 'b']
    $80binary_true_divide.3 = $76unary_negative.1 / a ['$76unary_negative.1', '$80binary_true_divide.3', 'a']
    $82return_value.4 = cast(value=$80binary_true_divide.3) ['$80binary_true_divide.3', '$82return_value.4']
    return $82return_value.4                 ['$82return_value.4']

2024-07-04 16:57:45,280 - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': '\n            Instruction:\n            Language: Tagalog, English\n            Evaluate the transcription based on the criteria below and give brief description on how you evaluate the criterias\n            Criterias:\n                - Compare the two Speaker Transcription and Given Script\n                - Include the mispronunciation between speaker transcription and given script\n\n            Speaker Transcription: the magical garden once upon a time in a small village there lived a young girl named lily lily loved exploring the woods behind her her house one sunny afternoon she discovered a hidden path she had never seen before curious she followed it the path lead to a beautiful garden filled with flowers of every color in the center stood a large tree with golden leaves as lily approached she noticed a tiny door at the base of the tree she gently knocked to her surprise the door creaked open and out stepped a tiny fairy with shimmering wings hello lily the fairy said with a smile i am flora the guardian of this magical garden lily was amazed so how do you know my name she asked ive been watching over you since you were born flora replied this garden is hiding and only those with pure hearts can find it flora invited lily to explore the garden and they walked flora explained that the garden could make dreams come true lily wished for her family to be a puffy and healthy flora waved her hand and saw a glow surround surrounded lily your wish will come true because its come from love flora said lily spent the afternoon playing with the fairies and animals in the garden as the sunset flora led her back to the path remember lily you can visit us anytime you need hope and joy flora said lily thanks flora and walk back home her heart filled with happiness from that from that day on she often visit the magical garden bringing joy and love back to her village and so lenny and her village live happily ever after with the magical of the garden always close to their hearts\n            Given Script: once upon a time in a small village there lived a young girl named lily lily loved exploring the woods behind her house one sunny afternoon she discovered a hidden path she had never seen before curious she followed it the path led to a beautiful garden filled with flowers of every color in the center stood a large tree with golden leaves as lily approached she noticed a tiny door at the base of the tree she gently knocked to her surprise the door creaked open and out stepped a tiny fairy with shimmering wings hello lily the fairy said with a smile i am flora the guardian of this magical garden lily was amazed how do you know my name she asked ive been watching over you since you were born flora replied this garden is hidden and only those with pure hearts can find it flora invited lily to explore the garden as they walked flora explained that the garden could make dreams come true lily wished for her family to be happy and healthy flora waved her wand and a soft glow surrounded lily your wish will come true because it comes from love flora said lily spent the afternoon playing with the fairies and animals in the garden as the sun set flora led her back to the path  remember lily you can visit us anytime you need hope or joy  flora said lily thanked flora and walked back home her heart filled with happiness from that day on she often visited the magical garden bringing joy and love back to her village and so lily and her village lived happily ever after with the magic of the garden always close to their hearts\n        '}], 'model': 'gpt-3.5-turbo'}}
2024-07-04 16:57:45,303 - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-07-04 16:57:45,399 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x000002713BA00370>
2024-07-04 16:57:45,399 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x000002713AE6C5C0> server_hostname='api.openai.com' timeout=5.0
2024-07-04 16:57:45,473 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x000002713BA44220>
2024-07-04 16:57:45,473 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-07-04 16:57:45,474 - DEBUG - send_request_headers.complete
2024-07-04 16:57:45,474 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-07-04 16:57:45,475 - DEBUG - send_request_body.complete
2024-07-04 16:57:45,475 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-07-04 16:57:48,516 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 04 Jul 2024 08:57:48 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'openai-organization', b'user-1c5khbc0tvu6nyyc4qrmz2l0'), (b'openai-processing-ms', b'2622'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'5000000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'4999091'), (b'x-ratelimit-reset-requests', b'6ms'), (b'x-ratelimit-reset-tokens', b'10ms'), (b'x-request-id', b'req_e7d13b1a07dddc6e87e225ec9a61c46b'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=DFn_0EGXHoRGuvUQXWiNoJvq_uGPaMk5QZ9yc4vUXvw-1720083468-1.0.1.1-N0AchtlkgNmgt660H.uijxgZ56eaVyg1ok_3hTStk3YlSm2hRnrfwW.KeHWp.OWjJlOoIiJBE0NfHZsTgTNmNw; path=/; expires=Thu, 04-Jul-24 09:27:48 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Set-Cookie', b'_cfuvid=WWbg3qd0qO1qhHWywlcHqrMbWQoTQnoyihbKju7A.KQ-1720083468479-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'89dde8db6c772023-NRT'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2024-07-04 16:57:48,518 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-04 16:57:48,518 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-07-04 16:57:48,519 - DEBUG - receive_response_body.complete
2024-07-04 16:57:48,519 - DEBUG - response_closed.started
2024-07-04 16:57:48,520 - DEBUG - response_closed.complete
2024-07-04 16:57:48,520 - DEBUG - HTTP Request: POST https://api.openai.com/v1/chat/completions "200 OK"
2024-07-04 16:57:49,553 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-07-04 16:57:49,554 - DEBUG - load_verify_locations cafile='C:\\Users\\SPM\\Desktop\\ONLY SAVE FILES HERE\\speechwise-api\\.venv\\lib\\site-packages\\certifi\\cacert.pem'
2024-07-04 16:57:49,570 - DEBUG - connect_tcp.started host='open.feishu.cn' port=443 local_address=None timeout=None socket_options=None
2024-07-04 16:57:49,630 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x000002713CF5CB80>
2024-07-04 16:57:49,631 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x000002713B9E1040> server_hostname='open.feishu.cn' timeout=None
2024-07-04 16:57:49,655 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x000002713CF5CCA0>
2024-07-04 16:57:49,655 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-07-04 16:57:49,656 - DEBUG - send_request_headers.complete
2024-07-04 16:57:49,656 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-07-04 16:57:49,657 - DEBUG - send_request_body.complete
2024-07-04 16:57:49,657 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-07-04 16:57:51,109 - DEBUG - receive_response_headers.failed exception=CancelledError()
2024-07-04 16:57:51,110 - DEBUG - response_closed.started
2024-07-04 16:57:51,110 - DEBUG - response_closed.complete
2024-07-04 16:58:12,996 - INFO - loading environment variables...
2024-07-04 16:58:12,997 - INFO - initializing lark envs...
2024-07-04 16:58:12,998 - INFO - loading ai models...
2024-07-04 16:58:21,840 - INFO - HTTP Request: POST https://open.feishu.cn/open-apis/drive/v1/medias/upload_all "HTTP/1.1 200 OK"
2024-07-04 16:58:27,490 - INFO - HTTP Request: POST https://api.deepgram.com/v1/listen?model=nova-2&punctuate=false&smart_format=false "HTTP/1.1 200 OK"
2024-07-04 16:58:34,142 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-04 16:58:39,076 - INFO - HTTP Request: POST https://open.feishu.cn/open-apis/bitable/v1/apps/LYLzbg2z0aNuUzsLaX8uLZE3spj/tables/tblPDHZfXgZ4Qsjk/records "HTTP/1.1 200 OK"
2024-07-04 16:58:43,646 - INFO - HTTP Request: PUT https://open.feishu.cn/open-apis/bitable/v1/apps/LYLzbg2z0aNuUzsLaX8uLZE3spj/tables/tblZUmwqwdCPptSM/records/recuhxXaOEA58d "HTTP/1.1 200 OK"
